openapi: 3.0.3
info:
  title: TimeMate
  version: 1.0.0
  description: Your project description
paths:
  /tasks/:
    get:
      operationId: tasks_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - tasks
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskListList'
          description: ''
  /tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tasks
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetail'
          description: ''
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskUpdate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdate'
          description: ''
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - tasks
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /tasks/create/:
    post:
      operationId: tasks_create_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCreate'
          description: ''
  /time-entries/:
    get:
      operationId: time_entries_list
      parameters:
      - in: query
        name: end_time_after
        schema:
          type: string
          format: date-time
      - in: query
        name: end_time_before
        schema:
          type: string
          format: date-time
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_time_after
        schema:
          type: string
          format: date-time
      - in: query
        name: start_time_before
        schema:
          type: string
          format: date-time
      - in: query
        name: task
        schema:
          type: string
      tags:
      - time-entries
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimeEntryListList'
          description: ''
    post:
      operationId: time_entries_create
      tags:
      - time-entries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntryCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeEntryCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeEntryCreate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryCreate'
          description: ''
  /time-entries/{id}/:
    get:
      operationId: time_entries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - time-entries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryDetail'
          description: ''
    put:
      operationId: time_entries_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - time-entries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntryUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeEntryUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeEntryUpdate'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryUpdate'
          description: ''
    patch:
      operationId: time_entries_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - time-entries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTimeEntryUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTimeEntryUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTimeEntryUpdate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryUpdate'
          description: ''
    delete:
      operationId: time_entries_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - time-entries
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /time-entries/sorted-by-duration/:
    get:
      operationId: time_entries_sorted_by_duration_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - time-entries
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimeEntryListSerializerWithDurationList'
          description: ''
  /time-entries/sorted-by-task-name/:
    get:
      operationId: time_entries_sorted_by_task_name_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - time-entries
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskWithTimeEntriesList'
          description: ''
components:
  schemas:
    PaginatedTaskListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskList'
    PaginatedTaskWithTimeEntriesList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskWithTimeEntries'
    PaginatedTimeEntryListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryList'
    PaginatedTimeEntryListSerializerWithDurationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryListSerializerWithDuration'
    PatchedTaskUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
          minLength: 2
        description:
          type: string
          nullable: true
          minLength: 2
          maxLength: 1000
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTimeEntryUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        task:
          type: string
          format: uuid
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
    TaskCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
          minLength: 2
        description:
          type: string
          nullable: true
          minLength: 2
          maxLength: 1000
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
    TaskDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
          minLength: 2
        description:
          type: string
          nullable: true
          minLength: 2
          maxLength: 1000
        created_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: integer
      required:
      - created_at
      - id
      - name
      - owner
    TaskList:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
          minLength: 2
        id:
          type: string
          format: uuid
          readOnly: true
        detail_url:
          type: string
          format: uri
          readOnly: true
      required:
      - detail_url
      - id
      - name
    TaskUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
          minLength: 2
        description:
          type: string
          nullable: true
          minLength: 2
          maxLength: 1000
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
    TaskWithTimeEntries:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 200
          minLength: 2
        detail_url:
          type: string
          format: uri
          readOnly: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryNestedSerializerWithDurationField'
          readOnly: true
      required:
      - detail_url
      - entries
      - id
      - name
    TimeEntryCreate:
      type: object
      properties:
        task:
          type: string
          format: uuid
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - end_time
      - start_time
      - task
    TimeEntryDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        task:
          allOf:
          - $ref: '#/components/schemas/TaskList'
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        owner:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - end_time
      - id
      - owner
      - start_time
      - task
    TimeEntryList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        task:
          allOf:
          - $ref: '#/components/schemas/TaskList'
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        detail_url:
          type: string
          format: uri
          readOnly: true
      required:
      - detail_url
      - end_time
      - id
      - start_time
      - task
    TimeEntryListSerializerWithDuration:
      type: object
      properties:
        duration:
          type: string
        id:
          type: string
          format: uuid
          readOnly: true
        task:
          allOf:
          - $ref: '#/components/schemas/TaskList'
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        detail_url:
          type: string
          format: uri
          readOnly: true
      required:
      - detail_url
      - duration
      - end_time
      - id
      - start_time
      - task
    TimeEntryNestedSerializerWithDurationField:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        duration:
          type: string
          readOnly: true
        detail_url:
          type: string
          format: uri
          readOnly: true
      required:
      - detail_url
      - duration
      - end_time
      - id
      - start_time
    TimeEntryUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        task:
          type: string
          format: uuid
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
      required:
      - end_time
      - id
      - start_time
      - task
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
